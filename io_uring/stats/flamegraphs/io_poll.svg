<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__hrtimer_run_queues (11,973 samples, 0.02%)</title><rect x="1016.2" y="133" width="0.3" height="15.0" fill="rgb(212,202,39)" rx="2" ry="2" />
<text  x="1019.21" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,457 samples, 0.02%)</title><rect x="1016.3" y="101" width="0.2" height="15.0" fill="rgb(205,83,23)" rx="2" ry="2" />
<text  x="1019.29" y="111.5" ></text>
</g>
<g >
<title>all (54,729,097 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(226,175,25)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,736 samples, 0.02%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(240,222,50)" rx="2" ry="2" />
<text  x="1192.74" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,005 samples, 0.03%)</title><rect x="1116.6" y="197" width="0.3" height="15.0" fill="rgb(249,60,26)" rx="2" ry="2" />
<text  x="1119.64" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (39,027 samples, 0.07%)</title><rect x="701.2" y="133" width="0.9" height="15.0" fill="rgb(250,145,45)" rx="2" ry="2" />
<text  x="704.24" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,760 samples, 0.03%)</title><rect x="1016.2" y="197" width="0.3" height="15.0" fill="rgb(231,121,11)" rx="2" ry="2" />
<text  x="1019.15" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,405 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(230,109,37)" rx="2" ry="2" />
<text  x="1192.70" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,098 samples, 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(221,119,52)" rx="2" ry="2" />
<text  x="1192.74" y="159.5" ></text>
</g>
<g >
<title>get_signal (33,057,865 samples, 60.40%)</title><rect x="221.7" y="213" width="712.7" height="15.0" fill="rgb(244,197,38)" rx="2" ry="2" />
<text  x="224.68" y="223.5" >get_signal</text>
</g>
<g >
<title>ret_from_fork (40,207 samples, 0.07%)</title><rect x="10.0" y="229" width="0.9" height="15.0" fill="rgb(226,223,41)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (37,337 samples, 0.07%)</title><rect x="701.3" y="117" width="0.8" height="15.0" fill="rgb(219,199,34)" rx="2" ry="2" />
<text  x="704.27" y="127.5" ></text>
</g>
<g >
<title>dequeue_signal (7,330 samples, 0.01%)</title><rect x="10.5" y="181" width="0.2" height="15.0" fill="rgb(243,226,39)" rx="2" ry="2" />
<text  x="13.50" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (9,151 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(223,37,40)" rx="2" ry="2" />
<text  x="1192.76" y="127.5" ></text>
</g>
<g >
<title>ret_from_fork (54,687,745 samples, 99.92%)</title><rect x="10.9" y="245" width="1179.1" height="15.0" fill="rgb(207,63,41)" rx="2" ry="2" />
<text  x="13.88" y="255.5" >ret_from_fork</text>
</g>
<g >
<title>mutex_unlock (3,387,801 samples, 6.19%)</title><rect x="1116.9" y="213" width="73.1" height="15.0" fill="rgb(252,18,48)" rx="2" ry="2" />
<text  x="1119.95" y="223.5" >mutex_un..</text>
</g>
<g >
<title>__cond_resched (3,434,966 samples, 6.28%)</title><rect x="147.5" y="213" width="74.1" height="15.0" fill="rgb(225,13,13)" rx="2" ry="2" />
<text  x="150.50" y="223.5" >__cond_r..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (47,734 samples, 0.09%)</title><rect x="701.2" y="181" width="1.0" height="15.0" fill="rgb(233,211,11)" rx="2" ry="2" />
<text  x="704.18" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,850 samples, 0.01%)</title><rect x="221.6" y="197" width="0.1" height="15.0" fill="rgb(230,40,11)" rx="2" ry="2" />
<text  x="224.57" y="207.5" ></text>
</g>
<g >
<title>update_process_times (7,039 samples, 0.01%)</title><rect x="1116.8" y="85" width="0.1" height="15.0" fill="rgb(211,45,15)" rx="2" ry="2" />
<text  x="1119.76" y="95.5" ></text>
</g>
<g >
<title>update_process_times (27,454 samples, 0.05%)</title><rect x="701.5" y="85" width="0.6" height="15.0" fill="rgb(252,160,9)" rx="2" ry="2" />
<text  x="704.48" y="95.5" ></text>
</g>
<g >
<title>mutex_lock (4,658,139 samples, 8.51%)</title><rect x="1016.5" y="213" width="100.4" height="15.0" fill="rgb(246,158,21)" rx="2" ry="2" />
<text  x="1019.52" y="223.5" >mutex_lock</text>
</g>
<g >
<title>scheduler_tick (5,623 samples, 0.01%)</title><rect x="1189.8" y="69" width="0.1" height="15.0" fill="rgb(205,94,53)" rx="2" ry="2" />
<text  x="1192.83" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (53,847 samples, 0.10%)</title><rect x="701.1" y="197" width="1.1" height="15.0" fill="rgb(239,106,39)" rx="2" ry="2" />
<text  x="704.05" y="207.5" ></text>
</g>
<g >
<title>dequeue_signal (8,866,614 samples, 16.20%)</title><rect x="702.2" y="197" width="191.2" height="15.0" fill="rgb(205,63,36)" rx="2" ry="2" />
<text  x="705.21" y="207.5" >dequeue_signal</text>
</g>
<g >
<title>update_process_times (6,732 samples, 0.01%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(207,27,46)" rx="2" ry="2" />
<text  x="1192.81" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,201 samples, 0.02%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(247,147,53)" rx="2" ry="2" />
<text  x="1192.74" y="175.5" ></text>
</g>
<g >
<title>rcu_all_qs (958,471 samples, 1.75%)</title><rect x="602.7" y="181" width="20.6" height="15.0" fill="rgb(247,45,11)" rx="2" ry="2" />
<text  x="605.66" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,401 samples, 0.02%)</title><rect x="1016.2" y="117" width="0.3" height="15.0" fill="rgb(218,223,48)" rx="2" ry="2" />
<text  x="1019.22" y="127.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (8,342 samples, 0.02%)</title><rect x="701.3" y="101" width="0.2" height="15.0" fill="rgb(232,84,49)" rx="2" ry="2" />
<text  x="704.29" y="111.5" ></text>
</g>
<g >
<title>io_run_task_work_head (2,971,767 samples, 5.43%)</title><rect x="952.4" y="213" width="64.1" height="15.0" fill="rgb(243,102,26)" rx="2" ry="2" />
<text  x="955.44" y="223.5" >io_run_..</text>
</g>
<g >
<title>scheduler_tick (5,739 samples, 0.01%)</title><rect x="1116.8" y="69" width="0.1" height="15.0" fill="rgb(231,178,14)" rx="2" ry="2" />
<text  x="1119.78" y="79.5" ></text>
</g>
<g >
<title>recalc_sigpending (5,017,678 samples, 9.17%)</title><rect x="785.2" y="181" width="108.2" height="15.0" fill="rgb(244,8,9)" rx="2" ry="2" />
<text  x="788.20" y="191.5" >recalc_sigpen..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,614 samples, 0.03%)</title><rect x="1016.2" y="181" width="0.3" height="15.0" fill="rgb(209,109,31)" rx="2" ry="2" />
<text  x="1019.20" y="191.5" ></text>
</g>
<g >
<title>io_sq_thread (40,152 samples, 0.07%)</title><rect x="10.0" y="213" width="0.9" height="15.0" fill="rgb(209,113,43)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,723 samples, 0.02%)</title><rect x="1116.7" y="149" width="0.2" height="15.0" fill="rgb(216,39,28)" rx="2" ry="2" />
<text  x="1119.69" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,659 samples, 0.01%)</title><rect x="221.6" y="181" width="0.1" height="15.0" fill="rgb(229,18,26)" rx="2" ry="2" />
<text  x="224.57" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,796 samples, 0.03%)</title><rect x="1016.2" y="149" width="0.3" height="15.0" fill="rgb(223,105,15)" rx="2" ry="2" />
<text  x="1019.21" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,867 samples, 0.02%)</title><rect x="1116.7" y="165" width="0.2" height="15.0" fill="rgb(243,46,51)" rx="2" ry="2" />
<text  x="1119.69" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (9,653 samples, 0.02%)</title><rect x="1116.7" y="117" width="0.2" height="15.0" fill="rgb(224,132,46)" rx="2" ry="2" />
<text  x="1119.70" y="127.5" ></text>
</g>
<g >
<title>[unknown] (40,208 samples, 0.07%)</title><rect x="10.0" y="245" width="0.9" height="15.0" fill="rgb(241,107,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>update_process_times (8,348 samples, 0.02%)</title><rect x="1016.3" y="85" width="0.2" height="15.0" fill="rgb(216,175,39)" rx="2" ry="2" />
<text  x="1019.29" y="95.5" ></text>
</g>
<g >
<title>get_signal (25,070 samples, 0.05%)</title><rect x="10.2" y="197" width="0.5" height="15.0" fill="rgb(239,80,29)" rx="2" ry="2" />
<text  x="13.15" y="207.5" ></text>
</g>
<g >
<title>rcu_all_qs (524,602 samples, 0.96%)</title><rect x="1105.3" y="181" width="11.3" height="15.0" fill="rgb(250,44,20)" rx="2" ry="2" />
<text  x="1108.33" y="191.5" ></text>
</g>
<g >
<title>uprobe_deny_signal (1,903,128 samples, 3.48%)</title><rect x="893.4" y="197" width="41.0" height="15.0" fill="rgb(242,146,28)" rx="2" ry="2" />
<text  x="896.40" y="207.5" >upr..</text>
</g>
<g >
<title>tick_sched_handle (6,823 samples, 0.01%)</title><rect x="1189.8" y="101" width="0.2" height="15.0" fill="rgb(237,41,16)" rx="2" ry="2" />
<text  x="1192.81" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,946 samples, 0.03%)</title><rect x="1016.2" y="165" width="0.3" height="15.0" fill="rgb(210,208,36)" rx="2" ry="2" />
<text  x="1019.20" y="175.5" ></text>
</g>
<g >
<title>[unknown] (54,728,565 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(214,175,52)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >[unknown]</text>
</g>
<g >
<title>__hrtimer_run_queues (9,545 samples, 0.02%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(246,117,51)" rx="2" ry="2" />
<text  x="1192.75" y="143.5" ></text>
</g>
<g >
<title>io_run_task_work (835,480 samples, 1.53%)</title><rect x="934.4" y="213" width="18.0" height="15.0" fill="rgb(215,26,7)" rx="2" ry="2" />
<text  x="937.43" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,500 samples, 0.01%)</title><rect x="221.6" y="213" width="0.1" height="15.0" fill="rgb(225,85,53)" rx="2" ry="2" />
<text  x="224.56" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3,604,835 samples, 6.59%)</title><rect x="623.3" y="197" width="77.8" height="15.0" fill="rgb(230,149,26)" rx="2" ry="2" />
<text  x="626.33" y="207.5" >_raw_spi..</text>
</g>
<g >
<title>__cond_resched (3,470,511 samples, 6.34%)</title><rect x="548.5" y="197" width="74.8" height="15.0" fill="rgb(221,45,28)" rx="2" ry="2" />
<text  x="551.50" y="207.5" >__cond_r..</text>
</g>
<g >
<title>hrtimer_interrupt (45,299 samples, 0.08%)</title><rect x="701.2" y="149" width="1.0" height="15.0" fill="rgb(253,202,32)" rx="2" ry="2" />
<text  x="704.22" y="159.5" ></text>
</g>
<g >
<title>task_tick_fair (12,727 samples, 0.02%)</title><rect x="701.7" y="53" width="0.3" height="15.0" fill="rgb(213,159,27)" rx="2" ry="2" />
<text  x="704.72" y="63.5" ></text>
</g>
<g >
<title>io_sq_thread (54,687,745 samples, 99.92%)</title><rect x="10.9" y="229" width="1179.1" height="15.0" fill="rgb(218,17,20)" rx="2" ry="2" />
<text  x="13.88" y="239.5" >io_sq_thread</text>
</g>
<g >
<title>scheduler_tick (22,544 samples, 0.04%)</title><rect x="701.6" y="69" width="0.4" height="15.0" fill="rgb(229,126,26)" rx="2" ry="2" />
<text  x="704.56" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (45,735 samples, 0.08%)</title><rect x="701.2" y="165" width="1.0" height="15.0" fill="rgb(232,145,4)" rx="2" ry="2" />
<text  x="704.21" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (6,865 samples, 0.01%)</title><rect x="1016.3" y="69" width="0.2" height="15.0" fill="rgb(214,25,24)" rx="2" ry="2" />
<text  x="1019.31" y="79.5" ></text>
</g>
<g >
<title>timekeeping_advance (7,346 samples, 0.01%)</title><rect x="701.3" y="85" width="0.2" height="15.0" fill="rgb(245,18,20)" rx="2" ry="2" />
<text  x="704.32" y="95.5" ></text>
</g>
<g >
<title>iou-sqp-296251 (54,728,565 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(226,125,54)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >iou-sqp-296251</text>
</g>
<g >
<title>rcu_all_qs (1,764,187 samples, 3.22%)</title><rect x="183.5" y="197" width="38.1" height="15.0" fill="rgb(249,41,12)" rx="2" ry="2" />
<text  x="186.52" y="207.5" >rcu..</text>
</g>
<g >
<title>tick_sched_handle (27,823 samples, 0.05%)</title><rect x="701.5" y="101" width="0.6" height="15.0" fill="rgb(228,36,15)" rx="2" ry="2" />
<text  x="704.47" y="111.5" ></text>
</g>
<g >
<title>update_load_avg (7,885 samples, 0.01%)</title><rect x="701.8" y="37" width="0.2" height="15.0" fill="rgb(233,52,37)" rx="2" ry="2" />
<text  x="704.82" y="47.5" ></text>
</g>
<g >
<title>__cond_resched (2,372,263 samples, 4.33%)</title><rect x="1065.5" y="197" width="51.1" height="15.0" fill="rgb(233,132,24)" rx="2" ry="2" />
<text  x="1068.50" y="207.5" >__con..</text>
</g>
<g >
<title>__hrtimer_run_queues (10,170 samples, 0.02%)</title><rect x="1116.7" y="133" width="0.2" height="15.0" fill="rgb(242,187,18)" rx="2" ry="2" />
<text  x="1119.70" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,349 samples, 0.02%)</title><rect x="1116.7" y="181" width="0.2" height="15.0" fill="rgb(253,149,46)" rx="2" ry="2" />
<text  x="1119.68" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,137 samples, 0.01%)</title><rect x="1116.8" y="101" width="0.1" height="15.0" fill="rgb(207,209,20)" rx="2" ry="2" />
<text  x="1119.76" y="111.5" ></text>
</g>
</g>
</svg>
