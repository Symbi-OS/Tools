#!/bin/sh

ARGS=($@)
ARG_NUM=${#ARGS[@]}
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
SC_LIB="$SCRIPT_DIR/sc_lib.so"
OPTS=0

if [ $ARG_NUM -gt 1 ]
then
	for i in "${!ARGS[@]}";
	do
    		if [[ "${ARGS[$i]}" == "-a" ]];
    		then
        		ARGS_IDX=$i
        		break
    		fi
	done
	APP_IDX=$(( ARGS_IDX + 1 ))

	APP=("${ARGS[@]:$APP_IDX}")
	ARGS=("${ARGS[@]::$ARGS_IDX}")
fi

PRINT_RED=1
function print_color () {
    echo -n "$(tput setaf $2)$1"
    # reset
    echo $(tput setaf 7)
}
function print_help () {
    echo script for performing interrupt interposition mitigations
    echo "flags: -\"r|w\" \"ksys|tcp\" -a <application>"
    echo
    echo example:
    echo "./shortcut -w ksys -a <application> <application-args>"
    echo "./shortcut -h"
}
function parse_args () {
    # Call getopt to validate the provided input. 
    while getopts "dhr:w:" OPTION; do
        case $OPTION in
            d)
                DEBUG=1
                ;;
            h)
                HELP=1
                print_help
                exit 0
                ;;
            r)
                SHORTCUT=$OPTARG
                case $SHORTCUT in
                    "ksys")
			OPT=$(( OPT | 1  ))
                        ;;
                    "tcp")
			OPT=$(( OPT | 2  ))
                        ;;
                    *)
                        echo "Incorrect -r option provided:" $SHORTCUT
                        echo bad shortcut: $SHORTCUT
                        ;;
                esac
                ;;
            w)
                SHORTCUT=$OPTARG
                case $SHORTCUT in
                    "ksys")
			OPT=$(( OPT | 4  ))
                        ;;
                    "tcp")
			OPT=$(( OPT | 8  ))
                        ;;
                    *)
                        echo "Incorrect -w option provided:" $SHORTCUT
                        echo bad shortcut: $SHORTCUT
                        ;;
                esac
                ;;
            *)
                echo "Incorrect options provided"
                break
                ;;
        esac
    done

    if [ ! -z "$DEBUG" ]; then
        echo Apply $SHORTCUT shortcut on core $APP
    fi
}
function shortcut () {
    SHORTCUT_COMMAND="${APP[@]}"
    if [ ! -z "$DEBUG" ]; then
        echo
        echo SHORTCUTTED APPLICATION:
        print_color "$SHORTCUT_COMMAND" $PRINT_RED
    fi
    export LD_PRELOAD=$SC_LIB 
    export SHORTCUT_OPTIONS=$OPT

    echo $("$SHORTCUT_COMMAND")
}

parse_args ${ARGS[@]}

shortcut
